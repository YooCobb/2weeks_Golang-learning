실수형 값을 연산하면 오차가 발생함 (2진수에서는 실수를 완벽하게 표현할 수 없음)
그래서 Go에서는 엡실론을 사용함 const epsilon = 1e-14
go언어의 머신 엡실론 값은 1e-14보다 항상 작거나 같음.

복소수의 경우 허수부의 마지막에i를 붙임.

복소수의 2가지 표현법
1. var nim1 complex64 = 1 + 2i
2. var num1 complex64 = complex(1, 2)

-----
묵시적인 형변환이 없으므로 명시적으로 자료형을 변환 해주어야함
크기가 큰 자료형에서 작은 자료형으로 변환시 넘치는 값은 버리게 됨.

-----------------------------------------------------
여러줄의 문자열을 저장할 때에는 ``를 사용함 ''이것나 ""이 아닌 ``임
문자열의 길이를 구하는 len함수를 사용할 때에 "한글"이것의 길이는 2가 아니라 6임
utf-8로 저장했을 때 RuneCountInString을 사용하면 실제 길이를 구할 수 있음.

